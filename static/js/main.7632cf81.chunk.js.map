{"version":3,"sources":["Components/Year_Components/YearLink.js","Components/Year_Components/YearLinkList.js","axios.js","Components/Header/Home.js","Components/Header/About.js","Components/Show_Components/MetaData.js","Components/Show_Components/SetHeader.js","Components/Show_Components/TrackAudio.js","Components/Show_Components/Track.js","Components/Show_Components/TrackList.js","Components/Show_Components/SetPage.js","Components/Show_Components/SetList.js","Components/Show_Components/Show.js","Containers/ShowDetails.js","Components/Year_Components/YearLinkInfo.js","Components/Year_Components/YearLinkListInfo.js","Containers/Years.js","Components/Tour_Components/TourLink.js","Components/Tour_Components/TourLinkList.js","Components/Tour_Components/TourCompare.js","Containers/Tours.js","Components/Song_Components/SongCompare.js","Components/Song_Components/SongLink.js","Components/Song_Components/SongLinkList.js","Containers/Songs.js","Components/Venue_Components/VenueLink.js","Components/Venue_Components/VenueLinkList.js","Components/Venue_Components/VenueCompare.js","Containers/Venues.js","Components/Show_Components/ShowLink.js","Components/Show_Components/ShowLinkList.js","Components/Header/Search.js","Containers/YearShow.js","Containers/TourShow.js","Components/Song_Components/SongShowLinkList.js","Containers/SongShow.js","Components/Venue_Components/VenueDateCompare.js","Containers/VenueShow.js","Components/Header/TopNavBar.js","Components/Header/RouteNotFound.js","Components/Sidebar.js","PhishApp.js","reportWebVitals.js","index.js"],"names":["YearLink","year","to","style","color","className","YearLinkList","data","undefined","Spinner","animation","reverse","map","axios","defaults","baseURL","headers","common","Home","props","state","yearLinkListItem","isLoading","get","then","res","setState","err","console","error","this","Nav","Component","About","href","target","MetaData","show","date","venue_name","venue","location","SetHeader","duration","setKey","keyString","TrackAudio","classStatus","track","url","useState","Audio","audio","playing","setPlaying","useEffect","play","pause","addEventListener","removeEventListener","useAudio","toggle","type","onClick","position","title","Track","selectedTrack","trackLength","hr","min","sec","indexHr","indexMin","indexSec","convertLength","mp3","TrackList","tracks","filter","set","id","SetPage","setTracks","setLength","reduce","a","b","SetList","sets","setNodes","Set","Show","ShowDetails","match","params","log","showCount","showString","class","YearLinkListWithInfo","show_count","Years","Navbar","bg","expand","TourLink","tour","shows","length","name","TourCompare","sort","nameA","toUpperCase","nameB","comparison","Tours","tourLinkListItem","totalPages","totalEntries","page","total_pages","total_entries","getAllTourPages","pageArray","Array","from","keys","shift","all","concat","sortTours","TourLinkList","SongCompare","titleA","titleB","SongLink","song","SongLinkList","Songs","getAllSongPages","sortSongs","songLinkListItem","VenueLink","shows_count","VenueLinkList","VenueCompare","Venues","getAllVenuePages","venueLinkListItem","ShowLink","getDate","hasOwnProperty","show_date","ShowLinkList","Search","searchText","exactShow","otherShows","songs","tours","searchResults","searchOutput","exact_show","other_shows","handleSearch","prevProps","toRender","margin","YearShow","showLinkListItem","TourShow","SongShowLinkList","SongShow","VenueDateCompare","VenueShow","show_ids","getShows","showId","push","sortVenueShowDates","TopNavBar","handleRoute","route","history","pathname","handleSearchInput","event","value","handleSearchSubmit","alert","Brand","Toggle","aria-controls","Collapse","Link","Form","inline","FormControl","onChange","placeholder","Button","variant","withRouter","RouteNotFound","r","forEach","i","React","Sidebar","PhishApp","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7632cf81.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst YearLink = (year) => {\n    return (\n        <Link to={`/PhishApp/years/${year.year}`} style={{ color: \"white\" }} className=\"btn btn-primary home-year\"> \n        <div className = \"home-year-item\">{year.year}</div> </Link>\n    );\n};\n\nexport default YearLink;\n","import YearLink from './YearLink'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst YearLinkList = ({ data }) => {\n    const yearNode = data === undefined ? <Spinner animation=\"border\" /> :\n        data.reverse().map((year) => {\n            return (<YearLink year={year} key={year} />)\n        });\n    return (yearNode);\n}\n\nexport default YearLinkList","import axios from 'axios';\naxios.defaults.baseURL = 'https://phish.in/api/v1'\naxios.defaults.headers.common = {\n'Authorization': `Bearer 856913ac92a15776365c3c519185fb5a4b0d041f248cbcb6f177c31906fe978345f1d6be08267531b818e52ddd9149f2`,\n// 'Accept-Encoding': 'gzip, deflate, br',\n// 'Connection': 'keep-alive',\n// 'Host': 'phish.in',\n\n//'Access-Control-Allow-Origin': 'true',\n// 'Access-Control-Allow-Credentials': 'true',\n//'Access-Control-Request-Methods': 'GET',\n//'Access-Control-Request-Headers': 'authorization, Accept',\n// 'Access-Control-Allow-Headers': 'X-Requested-With, content-type',\n'Accept': `application/json`,\n}\nexport default axios;","import React, { Component } from 'react';\nimport YearLinkList from '../Year_Components/YearLinkList';\nimport axios from '../../axios';\nimport { Nav } from \"react-bootstrap\";\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      yearLinkListItem: null,\n      isLoading: true,\n    }\n  }\n\n  componentDidMount() {\n    try {\n      axios.get(\"/years\")\n        .then((res) => {\n          this.setState({ data: res.data.data, isLoading: false })\n        })\n    } catch (err) {\n      // Handle Error Here\n      console.error(err);\n    }\n  }\n\n  render() {\n    let yearLinkListItem = this.state.isLoading ? <Spinner animation=\"border\"/> : <YearLinkList data={this.state.data} />\n    return (\n\n      <div className=\"container\">\n        < div className=\"hero-image\">\n          <div className=\"hero-text\">\n            <h1 >PhishApp</h1>\n            <p>Organized Audience Recordings</p>\n          </div>\n        </div>\n        <div >\n            <Nav >\n              <div className=\"container bg\">\n                <div className=\"btn-group\">\n                  {yearLinkListItem}\n                </div>\n              </div>\n            </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home\n\n","const About = (props) => {\n  return (\n    <div className=\"about-center\">\n      <div className = \"about-text\">\n      <div className=\"text-box\">\n        Created for learning and experimentation purposes.\n        </div>\n        <div className=\"text-box\">\n        PhishApp provides a simple, user-friendly interface to navigate the\n        vast public archive of audience recordings for the band Phish. You can search for\n        a specific show by year, tour, or song. You may also provide a keyword into the \n        search bar above. Each track is also linked to an audio file and fully \n        playable.\n      </div >\n      <div className=\"text-box\">\n        The required data is gathered using an API provided by <a href=\"https://www.phish.in\" target=\"_top\">Phish.in</a>.\n        Queries are done in real time and based upon the user's input. The resulting data is then used to provide an interface\n        to further refine your search until the desired show has been found. The app was built using \n        the React library and utilizes the Node.js run-time environment. HTTP requests are done through Node.js using the \n        Axios library. Styling comprises of CSS elements from the Bootstrap front-end framework.\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About","import React from \"react\";\n\nconst MetaData = (props) => {\n  let {\n    show: { date, venue_name, venue },\n  } = props;\n  return (\n    <div className=\"meta-data\">\n      <h2 className=\"field\">{date}</h2>\n      <h2 className=\"field\">{venue_name}</h2>\n      <h2 className=\"field\">{venue.location}</h2>\n    </div>\n  );\n};\n\nexport default MetaData;\n","import React from \"react\";\n\nconst SetHeader = (props) => {\n  let { duration, setKey } = props;\n  var keyString = \"\";\n\n  if (setKey === \"E\" || setKey === \"e\") {\n    keyString = <h6 className=\"set-header-field\">Encore</h6>;\n  } else {\n    keyString = <h6 className=\"set-header-field\">Set {setKey}</h6>;\n  }\n\n  return (\n    <div className=\"set-header\">\n      {keyString}\n      <h6 className=\"set-header-field-length\">Length: {duration}</h6>\n    </div>\n  );\n};\n\nexport default SetHeader;\n","import React, { Component, useState, useEffect } from \"react\";\n\nconst useAudio = url => {\n    const [audio] = useState(new Audio(url));\n    const [playing, setPlaying] = useState(false);\n\n    const toggle = () => setPlaying(!playing);\n\n    useEffect(() => {\n        playing ? audio.play() : audio.pause();\n    },\n        [playing]\n    );\n\n    useEffect(() => {\n        audio.addEventListener('ended', () => setPlaying(false));\n        return () => {\n            audio.removeEventListener('ended', () => setPlaying(false));\n        };\n    }, []);\n\n    return [playing, toggle];\n};\n\nconst TrackAudio = ({ track, duration, url }) => {\n    const [playing, toggle] = useAudio(url);\n    let classStatus\n    playing ? classStatus = \"list-group-item list-group-item-action active\" : classStatus = \"list-group-item list-group-item-action\"\n\n    return (\n        <div>\n            <button type=\"button\" className={classStatus} onClick={toggle}>{\n                <div className=\"track-info-name-length\">\n                    <div className=\"track-info-pos\">{track.position}</div>\n                    <div className=\"track-info-title\">{track.title}</div>\n                    <div className=\"track-info-length\">\n                        {duration}\n                    </div>\n                </div>\n            }</button>\n        </div>\n    );\n};\n\n// class TrackAudio extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             track: this.props.track,\n//             duration: this.props.duration,\n//             url: this.props.url,\n//             selectedTrack: null\n//         }\n//     }\n\n//     isTrackSelected() {\n//         if (AudioButton.toggle == true) {\n//             this.state.selectedTrack = AudioButton.track\n//         }\n//     }\n\n//     render() {\n//         return (\n//             AudioButton(this.state.track, this.state.duration, this.state.url)\n//         );\n//     }\n// }\n// TrackAudio.propTypes = {\n//     track: PropTypes.object,\n//     duration: PropTypes.string,\n//     url: PropTypes.string,\n// }\n\n\nexport default TrackAudio;\n\n","import React, { Component } from \"react\";\nimport TrackAudio from './TrackAudio';\n\nclass Track extends Component {\n    constructor(props) {\n        super(props);\n        // this.playAudio = this.playAudio.bind(this);\n        this.state = {\n            selectedTrack: null\n        }\n    }\n\n    convertLength() {\n        let { track } = this.props;\n        let trackLength = track.duration;\n        const hr = 3600000;\n        const min = 60000;\n        const sec = 1000;\n        var indexHr = 0,\n            indexMin = 0,\n            indexSec = 0;\n\n        if (trackLength > hr) {\n            while (trackLength > hr) {\n                trackLength = trackLength - hr;\n                indexHr++;\n            }\n            while (trackLength > min) {\n                trackLength = trackLength - min;\n                indexMin++;\n            }\n            if (indexMin < 10) {\n                indexMin = \"0\" + indexMin;\n            }\n            while (trackLength > sec) {\n                trackLength = trackLength - sec;\n                indexSec++;\n            }\n            if (indexSec < 10) {\n                indexSec = \"0\" + indexSec;\n            }\n            return indexHr + \":\" + indexMin + \":\" + indexSec;\n        } else if (trackLength > min && indexHr === 0) {\n            while (trackLength > min) {\n                trackLength = trackLength - min;\n                indexMin++;\n            }\n            while (trackLength > sec) {\n                trackLength = trackLength - sec;\n                indexSec++;\n            }\n            if (indexSec < 10) {\n                indexSec = \"0\" + indexSec;\n            }\n            return indexMin + \":\" + indexSec;\n        } else if (trackLength > min && indexHr !== 0) {\n            while (trackLength > min) {\n                trackLength = trackLength - min;\n                indexMin++;\n            }\n            if (indexMin < 10) {\n                indexMin = \"0\" + indexMin;\n            }\n            while (trackLength > sec) {\n                trackLength = trackLength - sec;\n                indexSec++;\n            }\n            if (indexSec < 10) {\n                indexSec = \"0\" + indexSec;\n            }\n            return indexMin + \":\" + indexSec;\n        } else {\n            while (trackLength > sec) {\n                trackLength = trackLength - sec;\n                indexSec++;\n            }\n            if (indexSec < 10) {\n                indexSec = \"0\" + indexSec;\n            }\n            return \":\" + indexSec;\n        }\n    }\n\n    render() {\n        let { track } = this.props;\n\n        return (\n            <TrackAudio track={track} duration={this.convertLength(track.duration)} url={track.mp3}> </TrackAudio>\n        )\n        // return (\n        //   <div className=\"list-group-item\">\n        //     <div className=\"track-info-name-length\">\n        //       <div className=\"track-info-pos\">{track.position}</div>\n        //       <div className=\"track-info-title\">{track.title}</div>\n        //       <div className=\"track-info-length glyphicon glyphicon-play-circle\">\n        //         {/* <button className=\"btn\"> \n        //           <i className=\"fa fa-play\" onClick={this.playAudio}></i>\n        //         </button> */}\n        //         {/* {this.playAudio} */}\n        //         <AudioPlayer url = {track.mp3}>\n        //         </AudioPlayer>\n        //       </div>\n        //       <div className=\"track-info-length\">\n        //         {this.convertLength(track.duration)}\n        //       </div>\n        //     </div>\n        //   </div>\n        // );\n    }\n\n}\n\nexport default Track;\n","import React from 'react';\nimport Track from './Track'\nimport PropTypes from 'prop-types';\n\nconst TrackList = (props) => {\n    let { tracks, setKey } = props;\n\n    let setTracks = tracks.filter((track) => {\n        return track.set === setKey;\n    });\n\n    const trackNode = setTracks.map((track) => {\n        return <Track track={track} key={track.id} />;\n    });\n\n    return (\n        trackNode\n    );\n}\n\nTrackList.propTypes = {\n    tracks: PropTypes.array,\n    setKey: PropTypes.string,\n}\n\nexport default TrackList;","import React from 'react';\nimport SetHeader from './SetHeader'\nimport TrackList from './TrackList'\nimport PropTypes from 'prop-types';\n\nconst SetPage = (props) => {\n    let { tracks, setKey } = props\n    const hr = 3600000\n    const min = 60000\n    const sec = 1000\n\n    let setTracks = tracks.filter((track) => {\n        return track.set === setKey;\n    });\n\n    let setLength = setTracks.reduce((a, b) =>\n        a + b.duration, 0\n    )\n\n    function convertLength() {\n        var indexHr = 0, indexMin = 0, indexSec = 0\n\n        if (setLength > hr) {\n            while (setLength > hr) {\n                setLength = setLength - hr\n                indexHr++\n            } while (setLength > min) {\n                setLength = setLength - min\n                indexMin++\n            } if (indexMin < 10) {\n                indexMin = \"0\" + indexMin\n            } while (setLength > sec) {\n                setLength = setLength - sec\n                indexSec++\n            } if (indexSec < 10) {\n                indexSec = \"0\" + indexSec\n            } return (indexHr + \":\" + indexMin + \":\" + indexSec)\n        } else if (setLength > min && indexHr === 0) {\n            while (setLength > min) {\n                setLength = setLength - min\n                indexMin++\n            } while (setLength > sec) {\n                setLength = setLength - sec\n                indexSec++\n            } if (indexSec < 10) {\n                indexSec = \"0\" + indexSec\n            } return (indexMin + \":\" + indexSec)\n        } else if (setLength > min && indexHr !== 0) {\n            while (setLength > min) {\n                setLength = setLength - min\n                indexMin++\n            } if (indexMin < 10) {\n                indexMin = \"0\" + indexMin\n            } while (setLength > sec) {\n                setLength = setLength - sec\n                indexSec++\n            } if (indexSec < 10) {\n                indexSec = \"0\" + indexSec\n            } return (indexMin + \":\" + indexSec)\n        } else if (setLength > sec) {\n            while (setLength > sec) {\n                setLength = setLength - sec\n                indexSec++\n            } if (indexSec < 10) {\n                indexSec = \"0\" + indexSec\n            }return indexSec = \"0\" + indexSec;\n        }\n    }\n\n        return (\n            <div>\n                <SetHeader duration={convertLength(setLength)} setKey={setKey} />\n                <div className=\"list-group\">\n                <TrackList tracks={setTracks} setKey={setKey} />\n                </div>\n                \n            </div>\n        );\n    }\n\n    SetPage.propTypes = {\n        tracks: PropTypes.array,\n        setKey: PropTypes.string,\n    }\n\n    export default SetPage;","import React from \"react\";\nimport SetPage from \"./SetPage\";\n\nconst SetList = (props) => {\n  let {\n    show: { tracks },\n  } = props;\n\n  let sets = tracks.map((track) => {\n    return track.set;\n  });\n\n  let setKeys = [...new Set(sets)];\n\n  const setNodes = setKeys.map((setKey) => {\n    return (\n      <div className=\"set-page\" key={setKey}>\n        <SetPage tracks={tracks} setKey={setKey} />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"set-details\">\n      <h2 className=\"set-title\">Set List</h2>\n      {setNodes}\n    </div>\n  );\n};\n\nexport default SetList;\n","import '../../style.css';\nimport React from 'react';\nimport MetaData from './MetaData'\nimport SetList from './SetList'\n\nconst Show = (props) => {\n    let { show } = props\n    return (\n        <div className=\"show-details\">\n            <div className=\"meta\"><MetaData show={show} /></div>\n            <div className=\"set-list\"><SetList show={show} /></div>\n        </div>\n    );\n};\n\nexport default Show","import React, { Component } from 'react';\nimport axios from '../axios';\nimport Show from '../Components/Show_Components/Show'\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass ShowDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: undefined,\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        try {\n            axios.get(\"shows/\" + this.props.match.params.date)\n                .then((res) => {\n                    console.log(res.data)\n                    this.setState({ show: res.data.data, isLoading: false })\n                })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    }\n\n    render() {\n        return (\n            this.state.isLoading ? <Spinner animation=\"border\" /> : <Show show={this.state.show} />\n        )\n    }\n}\nexport default ShowDetails;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst YearLink = (props) => {\n    let { year, showCount } = props\n    let showString = \"show\"\n    if (showCount > 1) {\n        showString = \"shows\"\n    }\n    return (\n        <Link to={`/PhishApp/years/${year}`} style={{ color: \"white\" }} className=\"btn btn-primary \">\n            <div className=\"year-info\">\n                <h5 className=\"year-info-year\">{year}</h5>\n                <div className=\"year-info-show\">\n                    <div class=\"container\">\n                        <span class=\"badge badge-light\">\n                            <div className=\"year-info-badge\">\n                                <div className=\"year-info-count\">{showCount}</div>\n                                <div> {showString} </div>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default YearLink;\n","import YearLinkWithInfo from './YearLinkInfo'\nimport Spinner from 'react-bootstrap/Spinner'\n\n\nimport React from 'react';\n\nconst YearLinkListWithInfo = ({ data }) => {\n    const yearNode = data === undefined ? <Spinner animation=\"border\" /> :\n        data.reverse().map((year) => {\n            return (<YearLinkWithInfo year={year.date} key={year.date} showCount={year.show_count} />)\n        });\n    return (yearNode);\n}\n\nexport default YearLinkListWithInfo","import React, { Component } from 'react';\nimport YearLinkList from '../Components/Year_Components/YearLinkList';\nimport axios from '../axios';\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Spinner from 'react-bootstrap/Spinner'\nimport YearLinkListWithInfo from '../Components/Year_Components/YearLinkListInfo';\n\nclass Years extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            yearLinkListItem: null,\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        try {\n            axios.get(\"/years?include_show_counts=true\")\n                .then((res) => {\n                    this.setState({ data: res.data.data, isLoading: false })\n                })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    }\n\n    render() {\n        let yearLinkListItem = this.state.isLoading ? <Spinner animation=\"border\" /> : <YearLinkListWithInfo data={this.state.data} />\n        return (\n            <Navbar bg=\"light\" expand=\"sm\" className=\"padding-zero\">\n                <Nav >\n                    <div className=\"container bvg\">\n                        <div className=\"btn-group-vertical\">\n                            {yearLinkListItem}\n                        </div>\n                    </div>\n                </Nav>\n            </Navbar>\n\n        );\n    }\n}\n\nexport default Years\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst TourLink = (tour) => {\n    let showString = \"show\"\n    if (tour.tour.shows.length > 1) {\n        showString = \"shows\"\n    }\n    return (\n        <Link to={`/PhishApp/tours/${tour.tour.id}`} style={{ color: \"white\" }} className=\"btn btn-primary shows\">\n            <div className=\"year-info\">\n                <h5 className=\"year-info-year\">{tour.tour.name}</h5>\n                <div className=\"year-info-show\">\n                    <div class=\"container\">\n                        <span class=\"badge badge-light\">\n                            <div className=\"year-info-badge\">\n                                <div className=\"year-info-count\">{tour.tour.shows.length}</div>\n                                <div> {showString} </div>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default TourLink;\n","import TourLink from './TourLink'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst YearLinkList = ({ data }) => {\n    const tourNode = data === undefined ? <Spinner animation=\"border\"/> :\n        data.map((tour) => {\n            return (<TourLink tour={tour} key={tour.id} />)\n        });\n    return (tourNode);\n}\n\nexport default YearLinkList","const TourCompare = (data) => {\n\n    function compare(a, b) {\n        const nameA = a.name.toUpperCase();\n        const nameB = b.name.toUpperCase();\n\n        let comparison = 0\n        if (nameA < nameB) {\n            comparison = -1;\n        }\n        if (nameA > nameB) {\n            comparison = 1;\n        }\n        return comparison;\n    }\n\n    return (\n        data.sort(compare)\n    );\n};\n\nexport default TourCompare;","import TourLinkList from '../Components/Tour_Components/TourLinkList';\nimport TourCompare from '../Components/Tour_Components/TourCompare'\nimport axios from '../axios';\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Spinner from 'react-bootstrap/Spinner'\nimport React, { Component } from 'react';\n\nclass Tours extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            tourLinkListItem: null,\n            isLoading: true,\n            totalPages: null,\n            totalEntries: null,\n            page: null,\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            await axios.get(\"/tours\")\n                .then((res) => {\n                    this.setState({ totalPages: res.data.total_pages + 1, totalEntries: res.data.total_entries })\n                    this.getAllTourPages()\n                })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    }\n\n    async getAllTourPages() {\n        let pageArray = Array.from(Array(this.state.totalPages).keys())\n        pageArray.shift()\n        console.log(pageArray)\n        do {\n            try {\n                await axios.all(\n                    pageArray.map(page => axios.get(\"/tours\", {\n                        params: { page: page }\n                    }).then((res) => {\n                        console.log(res.data)\n                        this.setState({ data: this.state.data.concat(res.data.data) })\n                    })\n                    )\n                )\n            } catch (err) {\n                // Handle Error Here\n                console.error(err);\n            }\n            console.log(this.state.data.length)\n            console.log(this.state.totalEntries)\n        }\n        while (this.state.data.length < this.state.totalEntries)\n        this.state.isLoading = false\n        this.sortTours()\n    }\n\n    sortTours() {\n        this.setState({ data: TourCompare(this.state.data) })\n    }\n\n    render() {\n        let tourLinkListItem = this.state.isLoading ? <Spinner animation=\"border\" /> : <TourLinkList data={this.state.data} />\n        return (\n            <Navbar bg=\"light\" expand=\"sm\" className=\"padding-zero\">\n                <Nav >\n                    <div className=\"container bvg\">\n                        <div className=\"btn-group-vertical\">\n                            {tourLinkListItem}\n                        </div>\n                    </div>\n                </Nav>\n            </Navbar>\n\n        );\n    }\n}\n\nexport default Tours;","const SongCompare = (data) => {\n\n  function compare(a, b) {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n\n    let comparison = 0\n    if (titleA < titleB) {\n      comparison = -1;\n    }\n    if (titleA > titleB) {\n      comparison = 1;\n    }\n    return comparison;\n  }\n\n  return (\n    data.sort(compare)\n  );\n};\n\nexport default SongCompare;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SongLink = (song) => {\n    return (\n        <Link to={`/PhishApp/songs/${song.song.id}`} style={{ color: \"white\" }} className=\"btn btn-primary shows\"> <h5>{song.song.title}</h5> </Link>\n    );\n};\n\nexport default SongLink;","import SongLink from './SongLink'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst SongLinkList = ({ data }) => {\n    const songNode = data === undefined ? <Spinner animation=\"border\"/> :\n        data.map((song) => {\n            return (<SongLink song={song} key={song.id} />)\n        });\n    return (songNode);\n}\n\nexport default SongLinkList","import SongCompare from '../Components/Song_Components/SongCompare'\nimport SongLinkList from '../Components/Song_Components/SongLinkList';\nimport axios from '../axios';\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Spinner from 'react-bootstrap/Spinner'\nimport React, { Component } from 'react';\n\nclass Songs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            tourLinkListItem: null,\n            isLoading: true,\n            totalPages: null,\n            totalEntries: null,\n            page: null,\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            await axios.get(\"/songs\")\n                .then((res) => {\n                    this.setState({ totalPages: res.data.total_pages + 1, totalEntries: res.data.total_entries })\n                    this.getAllSongPages()\n                })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    }\n\n    async getAllSongPages() {\n        let pageArray = Array.from(Array(this.state.totalPages).keys())\n        pageArray.shift()\n        console.log(pageArray)\n        do {\n            try {\n                await axios.all(\n                    pageArray.map(page => axios.get(\"/songs\", {\n                        params: { page: page }\n                    }).then((res) => {\n                        console.log(res.data)\n                        this.setState({ data: this.state.data.concat(res.data.data) })\n                    })\n                    )\n                )\n            } catch (err) {\n                // Handle Error Here\n                console.error(err);\n            }\n        }\n        while (this.state.data.length < this.state.totalEntries)\n        this.state.isLoading = false\n        this.sortSongs()\n    }\n\n    sortSongs() {\n        this.setState({ data: SongCompare(this.state.data) })\n    }\n\n    render() {\n        let songLinkListItem = this.state.isLoading ? <Spinner animation=\"border\" /> : <SongLinkList data={this.state.data} />\n        return (\n\n            <Navbar bg=\"light\" expand=\"sm\" className=\"padding-zero\">\n                <Nav >\n                    <div className=\"container bvg\">\n                        <div className=\"btn-group-vertical\">\n                            {songLinkListItem}\n                        </div>\n                    </div>\n                </Nav>\n            </Navbar>\n\n        );\n    }\n}\n\nexport default Songs;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst VenueLink = (venue) => {\n    let showString = \"show\"\n    if (venue.venue.shows_count > 1) {\n        showString = \"shows\"\n    }\n    return (\n        <Link to={`/PhishApp/venues/${venue.venue.id}`} style={{ color: \"white\" }} className=\"btn btn-primary shows\">\n            <div className=\"year-info\">\n                <h5 className=\"year-info-year\">{venue.venue.name}</h5>\n                <div className=\"year-info-show\">\n                    <div className=\"container\">\n                        <span className=\"badge badge-light\">\n                            <div className=\"year-info-badge\">\n                                <div className=\"year-info-count\">{venue.venue.shows_count}</div>\n                                <div> {showString} </div>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default VenueLink;","import VenueLink from './VenueLink'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst VenueLinkList = ({ data }) => {\n    const venueNode = data === undefined ? <Spinner animation=\"border\" /> :\n        data.map((venue) => {\n            return (<VenueLink venue={venue} key={venue.id} />)\n        });\n    return (venueNode);\n}\n\nexport default VenueLinkList","const VenueCompare = (data) => {\n\n    function compare( a, b ) {\n        const nameA = a.name.toUpperCase();\n        const nameB = b.name.toUpperCase();\n\n        let comparison = 0\n        if ( nameA < nameB ){\n            comparison = -1;\n        }\n        if ( nameA > nameB ){\n            comparison = 1;\n        }\n        return comparison;\n      }\n\n    return (\n        data.sort(compare)\n    );\n};\n\nexport default VenueCompare;","import React, { Component } from 'react';\nimport VenueLinkList from '../Components/Venue_Components/VenueLinkList';\nimport VenueCompare from '../Components/Venue_Components/VenueCompare'\nimport axios from '../axios';\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass Venues extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            yearLinkListItem: null,\n            isLoading: true,\n            totalPages: null,\n            totalEntries: null,\n            page: null,\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            await axios.get(\"/venues\")\n                .then((res) => {\n                    this.setState({ totalPages: res.data.total_pages + 1, totalEntries: res.data.total_entries })\n                    this.getAllVenuePages()\n                })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    }\n\n    async getAllVenuePages() {\n        let pageArray = Array.from(Array(this.state.totalPages).keys())\n        pageArray.shift()\n        do {\n            try {\n                await axios.all(\n                    pageArray.map(page => axios.get(\"/venues\", {\n                        params: { page: page }\n                    }).then((res) => {\n                        console.log(res.data)\n                        this.setState({ data: this.state.data.concat(res.data.data) })\n                    })\n                    )\n                )\n            } catch (err) {\n                // Handle Error Here\n                console.error(err);\n            }\n        }\n        while (this.state.data.length < this.state.totalEntries)\n        this.state.isLoading = false\n        this.sortTours()\n    }\n\n    sortTours() {\n        this.setState({ data: VenueCompare(this.state.data) })\n    }\n\n    render() {\n        let venueLinkListItem = this.state.isLoading ? <Spinner animation=\"border\" /> : <VenueLinkList data={this.state.data} />\n        return (\n            <Navbar bg=\"light\" expand=\"sm\" className=\"padding-zero\">\n                <Nav >\n                    <div className=\"container bvg\">\n                        <div className=\"btn-group-vertical\">\n                            {venueLinkListItem}\n                        </div>\n                    </div>\n                </Nav>\n            </Navbar>\n\n        );\n    }\n}\n\nexport default Venues","import { Link } from \"react-router-dom\";\n\nconst ShowLink = ({ show }) => {\n\n  function getVenueName() {\n    let venueName = null\n    let venueCheck = show.hasOwnProperty('venue')\n\n    if (venueCheck) {\n      venueName = show.venue.name\n    } else {\n      venueName = show.venue_name\n    }\n    return venueName\n  }\n\n  function getDate() {\n    let date = null\n    let dateCheck = show.hasOwnProperty('date')\n\n    if (dateCheck) {\n      date = show.date\n    } else {\n      date = show.show_date\n    }\n    return date\n  }\n\n  return (\n    <Link to={\"/PhishApp/shows/\" + getDate()} style={{ color: \"white\" }} className=\"btn btn-primary shows\">\n      <div className=\"show-info\">\n        <h5 className=\"show-info-year\"> {getDate()} </h5>\n        <h5 className=\"show-info-venue\"> {getVenueName()} </h5>\n      </div>\n\n    </Link>\n  );\n};\n\nexport default ShowLink;\n","import '../../style.css';\nimport ShowLink from \"./ShowLink\";\n\nconst ShowLinkList = ({ shows }) => {\n  const showNode = shows.map((show) => {\n    return <ShowLink show={show} key={show.id} />;\n  });\n  return showNode;\n};\n\nexport default ShowLinkList;\n","\nimport ShowLink from '../Show_Components/ShowLink'\nimport ShowLinkList from '../Show_Components/ShowLinkList'\nimport SongLinkList from '../Song_Components/SongLinkList'\nimport TourLinkList from '../Tour_Components/TourLinkList'\nimport axios from './../../axios';\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Spinner from 'react-bootstrap/Spinner'\nimport React, { Component } from 'react';\n\nclass Search extends Component {\n  state = {\n    isLoading: true,\n    searchText: \"\",\n    exactShow: null,\n    otherShows: [],\n    songs: [],\n    tours: [],\n    searchResults: null,\n    searchOutput: []\n  };\n\n  async handleSearch(){\n    let page = 0\n    let totalPages = 0\n    this.state.searchText = this.props.location.state.searchText\n    do {\n      try {\n        await axios.get(\"/search/\" + this.state.searchText, { params: { page: ++page } })\n          .then((res) => {\n            console.log(res.data)\n            totalPages = res.total_pages\n            this.setState({\n              searchResults: res.data, exactShow: res.data.data.exact_show, otherShows: res.data.data.other_shows,\n              songs: res.data.data.songs, tours: res.data.data.tours, isLoading: false\n            })\n          })\n      } catch (err) {\n        // Handle Error Here\n        console.error(err);\n      }\n    } while (page < totalPages)\n  }\n\n  componentDidMount() {\n    this.handleSearch();\n  }\n\n  componentDidUpdate(prevProps) {\n    let prevSearch = prevProps.location.state.searchText;\n    let newSearch = this.props.location.state.searchText;\n    if (prevSearch !== newSearch) {\n      this.handleSearch();\n    }\n  }\n\n  render() {\n    let toRender = this.state.isLoading ? (\n      <Spinner animation=\"border\" />\n    ) : (\n        <>\n          <h1>Your Search Results</h1>\n          <ul>\n            <li>Search: \"{this.state.searchText}\"</li>\n          </ul>\n          {this.state.searchResults !== null ? (\n            <Navbar bg=\"light\" expand=\"sm\">\n                {this.state.exactShow !== null ? (\n                  <Nav >\n                    <h4>Exact Show</h4>\n                    <div className=\"btn-group-vertical\">\n                      <ShowLink show={this.state.exactShow} />\n                    </div>\n                    </Nav>\n                ) : (\n                  <></>\n              )}\n              {this.state.otherShows.length > 0 ? (\n              <Nav >\n                <h4>Other Shows on this Day</h4>\n                <div className=\"container bvg\">\n                  <div className=\"btn-group-vertical\">\n                    <ShowLinkList shows={this.state.otherShows} />\n                  </div>\n                </div>\n              </Nav>\n              ) : (\n                <></>\n            )}\n            {this.state.songs.length > 0 ? (\n              <Nav >\n                <h4>Matching Songs</h4>\n                <div className=\"container bvg\">\n                  <div className=\"btn-group-vertical\">\n                    <SongLinkList data={this.state.songs} />\n                  </div>\n                </div>\n              </Nav>\n              ) : (\n                <></>\n            )}\n            {this.state.tours.length > 0 ? (\n              <Nav >\n                <h4>Matching Tours</h4>\n                <div className=\"container bvg\">\n                  <div className=\"btn-group-vertical\">\n                    <TourLinkList data={this.state.tours} />\n                  </div>\n                </div>\n              </Nav>\n              ) : (\n                <></>\n            )}\n            </Navbar >\n          ) : (\n              <p>NO RESULTS FOUND</p>\n            )}\n        </>\n      );\n\n    return <div style={{ margin: \"20px 0px 0px 20px\" }}>{toRender}</div>;\n  }\n}\nexport default Search","import React, { Component } from 'react';\nimport axios from '../axios';\nimport ShowLinkList from '../Components/Show_Components/ShowLinkList';\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass YearShow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            showLinkListItem: null,\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        try {\n            axios.get(\"years/\" + this.props.match.params.year)\n                .then((res) => {\n                    console.log(res.data)\n                    this.setState({ data: res.data.data, isLoading: false })\n                })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    }\n\n    render() {\n        let showLinkListItem = this.state.isLoading ? <Spinner animation=\"border\" /> : <ShowLinkList shows={this.state.data} />\n        return (\n            <Navbar bg=\"light\" expand=\"sm\">\n                <Nav >\n                    <div className=\"container bvg\">\n                        <div className=\"btn-group-vertical\">\n                            {showLinkListItem}\n                        </div>\n                    </div>\n                </Nav>\n            </Navbar >\n\n        );\n    }\n}\n\nexport default YearShow\n","import React, { Component } from 'react';\nimport axios from '../axios';\nimport ShowLinkList from '../Components/Show_Components/ShowLinkList';\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass TourShow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            showLinkListItem: null,\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        try {\n            axios.get(\"tours/\" + this.props.match.params.tour)\n                .then((res) => {\n                    console.log(res.data)\n                    this.setState({ data: res.data.data.shows, isLoading: false })\n                    //this.getShows()\n                })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    }\n\n    render() {\n        let showLinkListItem = this.state.isLoading ? <Spinner animation=\"border\" /> : <ShowLinkList shows={this.state.data} />\n        return (\n            <Navbar bg=\"light\" expand=\"sm\">\n                <Nav >\n                    <div className=\"container bvg\">\n                        <div className=\"btn-group-vertical\">\n                            {showLinkListItem}\n                        </div>\n                    </div>\n                </Nav>\n            </Navbar >\n\n        );\n    }\n}\n\nexport default TourShow","import '../../style.css';\nimport ShowLink from \"../Show_Components/ShowLink\";\n\nconst SongShowLinkList = ({ shows }) => {\n  const showNode = shows.tracks.map((show) => {\n    return <ShowLink show={show} key={show.id} />;\n  });\n  return showNode;\n};\n\nexport default SongShowLinkList;\n","import React, { Component } from 'react';\nimport axios from '../axios';\nimport SongShowLinkList from '../Components/Song_Components/SongShowLinkList';\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass SongShow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            showLinkListItem: null,\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        try {\n            axios.get(\"songs/\" + this.props.match.params.song)\n                .then((res) => {\n                    console.log(res.data)\n                    this.setState({ data: res.data.data, isLoading: false })\n                })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    }\n\n    render() {\n        let showLinkListItem = this.state.isLoading ? <Spinner animation=\"border\" /> : <SongShowLinkList shows={this.state.data} />\n        return (\n            <Navbar bg=\"light\" expand=\"sm\">\n                <Nav >\n                    <div className=\"container bvg\">\n                        <div className=\"btn-group-vertical\">\n                            {showLinkListItem}\n                        </div>\n                    </div>\n                </Nav>\n            </Navbar >\n\n        );\n    }\n}\n\nexport default SongShow","const VenueDateCompare = (data) => {\n\n    function compare( a, b ) {\n        const nameA = a.date.toUpperCase();\n        const nameB = b.date.toUpperCase();\n\n        let comparison = 0\n        if ( nameA < nameB ){\n            comparison = -1;\n        }\n        if ( nameA > nameB ){\n            comparison = 1;\n        }\n        return comparison;\n      }\n\n    return (\n        data.sort(compare)\n    );\n};\n\nexport default VenueDateCompare;","import React, { Component } from 'react';\nimport axios from '../axios';\nimport ShowLinkList from '../Components/Show_Components/ShowLinkList';\nimport VenueDateCompare from '../Components/Venue_Components/VenueDateCompare'\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass VenueShow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n             data: [],\n            shows: [],\n            showLinkListItem: null,\n            isLoading: true,\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            await axios.get(\"venues/\" + this.props.match.params.venue)\n                .then((res) => {\n                    console.log(res.data)\n                    this.setState({ data: res.data.data.show_ids })\n                    this.getShows()\n                })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    }\n\n    async getShows() {\n        try {\n             await this.state.data.map((showId) => {\n                axios.get(\"shows/\" + showId)\n                    .then((res) => {\n                        console.log(res.data.data)\n                        this.state.shows.push(res.data.data)\n                        if (this.state.shows.length === this.state.data.length) {\n                            this.setState({ isLoading: false })\n                            this.sortVenueShowDates()\n                        }\n                    })\n            })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n        \n        \n    }\n\n    sortVenueShowDates() {\n        this.setState({ data: VenueDateCompare(this.state.shows) })\n    }\n\n    render() {\n        let showLinkListItem = this.state.isLoading ? <Spinner animation=\"border\" /> : <ShowLinkList shows={this.state.shows} />\n        return (\n            <Navbar bg=\"light\" expand=\"sm\">\n                <Nav >\n                    <div className=\"container bvg\">\n                        <div className=\"btn-group-vertical\">\n                            {showLinkListItem}\n                        </div>\n                    </div>\n                </Nav>\n            </Navbar >\n\n        );\n    }\n}\n\nexport default VenueShow","import { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\"\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Player from './Player'\nimport './../../style.css';\n\nclass TopNavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n\n  handleRoute = route => () => {\n    this.props.history.push({ pathname: route });\n  };\n\n  handleSearchInput = event => {\n    this.setState({\n      searchText: event.target.value\n    });\n  };\n\n  handleSearchSubmit = () => {\n    if (this.state.searchText && this.state.searchText.length >= 3) {\n      this.props.history.push({\n        pathname: \"/PhishApp/search?term=\" + this.state.searchText,\n        state: {\n          searchText: this.state.searchText\n        }\n      });\n    } else if (this.state.searchText && this.state.searchText.length < 3) {\n      alert(\"Search term must be longer than 3 characters\");\n    } else {\n      alert(\"Please enter some search text!\");\n    }\n  };\n\n  render() {\n    return (\n      <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand onClick={this.handleRoute(\"/PhishApp\")}>PhishApp</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick={this.handleRoute(\"/PhishApp\")}>Home</Nav.Link>\n            <Nav.Link onClick={this.handleRoute(\"/PhishApp/about\")}>About</Nav.Link>\n          </Nav>\n          {/* <Player></Player> */}\n          <Form inline>\n            <FormControl onChange={this.handleSearchInput}\n              value={this.state.searchText}\n              type=\"text\"\n              placeholder=\"Search\"\n              className=\"mr-sm-2\"\n            />\n            <Button onClick={this.handleSearchSubmit} variant=\"outline-info\">\n              Search\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n    );\n  }\n}\n\nexport default withRouter(TopNavBar);\n","import React from \"react\";\n\nexport default class RouteNotFound extends React.Component {\n  render() {\n    let r = [];\n    [...Array(1).keys()].forEach(i =>\n      r.push(<h1 key={i}>Unable to find that...</h1>)\n    );\n    return r;\n  }\n}","import { Nav, Navbar } from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\"\n\nconst Sidebar = () => {\n  return (\n    <Navbar bg=\"light\" className=\"sidebar\">\n      <Nav className=\"mr-auto\">\n        <Link to=\"/PhishApp/years\" className=\"nav-link\">Years</Link>\n      </Nav>\n      <Nav className=\"mr-auto\">\n        <Link to=\"/PhishApp/tours\" className=\"nav-link\">Tours</Link>\n      </Nav>\n      <Nav className=\"mr-auto\">\n        <Link to=\"/PhishApp/venues\" className=\"nav-link\">Venues</Link>\n      </Nav>\n      <Nav className=\"mr-auto\">\n        <Link to=\"/PhishApp/songs\" className=\"nav-link\">Songs</Link>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Sidebar;\n","import \"./style.css\";\nimport \"./index.css\";\nimport Home from \"./Components/Header/Home\";\nimport About from \"./Components/Header/About\";\nimport ShowDetails from \"./Containers/ShowDetails\";\nimport Years from \"./Containers/Years\";\nimport Tours from \"./Containers/Tours\";\nimport Songs from \"./Containers/Songs\";\nimport Venues from \"./Containers/Venues\";\nimport Search from \"./Components/Header/Search\";\nimport YearShow from \"./Containers/YearShow\";\nimport TourShow from \"./Containers/TourShow\";\nimport SongShow from \"./Containers/SongShow\";\nimport VenueShow from \"./Containers/VenueShow\";\nimport TopNavBar from \"./Components/Header/TopNavBar\";\nimport RouteNotFound from \"./Components/Header/RouteNotFound\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Sidebar from \"./Components/Sidebar\";\n\nconst PhishApp = () => {\n  return (\n    <div className=\"wrapper\">\n      <Router>\n        <audio className=\"audio-element\">\n          <source id=\"audio-element-source\"></source>\n        </audio>\n        <TopNavBar />\n        <div className=\"side-and-content\">\n          <Sidebar />\n          <div className=\"content-pane\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/PhishApp\" component={Home} />\n              <Route exact path=\"/PhishApp/about\" component={About} />\n              <Route exact path=\"/PhishApp/search?term=:searchText\" component={Search} />\n              <Route exact path=\"/PhishApp/tours\" component={Tours} />\n              <Route exact path=\"/PhishApp/songs\" component={Songs} />\n              <Route exact path=\"/PhishApp/years\" component={Years} />\n              <Route exact path=\"/PhishApp/venues\" component={Venues} />\n              <Route path=\"/PhishApp/years/:year\" component={YearShow} />\n              <Route path=\"/PhishApp/shows/:date\" component={ShowDetails} />\n              <Route path=\"/PhishApp/tours/:tour\" component={TourShow} />\n              <Route path=\"/PhishApp/songs/:song\" component={SongShow} />\n              <Route path=\"/PhishApp/venues/:venue\" component={VenueShow} />\n              <Route component={RouteNotFound} />\n            </Switch>\n          </div>\n        </div>\n        <div className=\"footer\">&copy; 2021 Caleb Tracey</div>\n      </Router>\n    </div>\n\n  );\n};\n\nexport default PhishApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PhishApp from './PhishApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <PhishApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}